#include <stdio.h>

// Function to perform linear search
int linearSearch(int arr[], int n, int key) {
    for (int i = 0; i < n; i++) {
        if (arr[i] == key) {
            return i; // return the index of the found element
        }
    }
    return -1; // return -1 if the element is not found
}

// Function to perform binary search
int binarySearch(int arr[], int n, int key) {
    int low = 0;
    int high = n - 1;

    while (low <= high) {
        int mid = (low + high) / 2;

        if (arr[mid] == key) {
            return mid; // return the index of the found element
        } else if (arr[mid] < key) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    return -1; // return -1 if the element is not found
}

int main() {
    int arr[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    int n = sizeof(arr) / sizeof(arr[0]);

    int key = 5;

    int index = linearSearch(arr, n, key);
    if (index!= -1) {
        printf("Element %d found at index %d using linear search\n", key, index);
    } else {
        printf("Element %d not found using linear search\n", key);
    }

    index = binarySearch(arr, n, key);
    if (index!= -1) {
        printf("Element %d found at index %d using binary search\n", key, index);
    } else {
        printf("Element %d not found using binary search\n", key);
    }

    return 0;
}
