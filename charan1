•	Write and execute a C Program to print an array which size is 10
#include <stdio.h>
int main() {
    int arr[10];
    int i;

    for(i = 0; i < 10; i++) {
        arr[i] = i + 1;
    }
  
    printf("Array elements: ");
    for(i = 0; i < 10; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
•	Write and execute a C Program to insert a data into a specific position in an array
#include <stdio.h>

void insertAtPosition(int arr[], int n, int position, int data) {
    if (position > n) {
        printf("Position out of bounds.\n");
        return;
    }

    for (int i = n; i > position - 1; i--) {
        arr[i] = arr[i - 1];
    }

    arr[position - 1] = data;
}

int main() {
    int arr[10] = {1, 2, 3, 4, 5};
    int n = sizeof(arr) / sizeof(arr[0]);
    int position = 3;
    int data = 7;

    printf("Original array: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    insertAtPosition(arr, n, position, data);

    printf("Array after insertion: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
•	Write and execute a C program to print an array in reverse order.
#include <stdio.h>

int main() {
    int arr[] = {1, 2, 3, 4, 5};
    int size = sizeof(arr) / sizeof(arr[0]);

    printf("Original array: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    printf("Array in reverse order: ");
    for (int i = size - 1; i >= 0; i--) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
•	Write and execute a C Program to calculate sum of an array.
  #include <stdio.h>

int main() {
    int n, i;
    float arr[100], sum = 0.0;

    printf("Enter the number of elements: ");
    scanf("%d", &n);

    printf("Enter %d elements: ", n);
    for (i = 0; i < n; ++i) {
        scanf("%f", &arr[i]);
        sum += arr[i];
    }

    printf("Sum = %.2f", sum);
    return 0;
}
•	Write and execute a C Program to calculate average of an array.
  #include <stdio.h>

int main() {
    int n, i;
    float sum = 0.0, average;

    printf("Enter the number of elements: ");
    scanf("%d", &n);

    float arr[n];

    printf("Enter the elements: ");
    for (i = 0; i < n; i++) {
        scanf("%f", &arr[i]);
    }

    for (i = 0; i < n; i++) {
        sum += arr[i];
    }

    average = sum / n;

    printf("Average: %.2f\n", average);

    return 0;
}
•	Write and execute a C Program to find the largest element of an array
#include <stdio.h>

int main() {
    int arr[] = {10, 5, 8, 20, 15};
    int size = sizeof(arr) / sizeof(arr[0]);
    int largest = arr[0];

    for (int i = 1; i < size; i++) {
        if (arr[i] > largest) {
            largest = arr[i];
        }
    }

    printf("The largest element in the array is: %d\n", largest);
    return 0;
}
•	Write and execute a C Program to find the second largest element of an array.
  #include <stdio.h>

int main() {
    int n, i, max1, max2;
    printf("Enter the number of elements in the array: ");
    scanf("%d", &n);

    int arr[n];
    printf("Enter the elements of the array:\n");
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    max1 = max2 = arr[0];
    for (i = 1; i < n; i++) {
        if (arr[i] > max1) {
            max2 = max1;
            max1 = arr[i];
        } else if (arr[i] > max2 && arr[i] != max1) {
            max2 = arr[i];
        }
    }

    if (max2 == max1) {
        printf("There is no second largest element in the array.\n");
    } else {
        printf("The second largest element in the array is: %d\n", max2);
    }

    return 0;
}
•	Write and execute a C Program to find the smallest element of an array
#include <stdio.h>

int main() {
    int arr[100], n, min = 0;

    printf("Enter the number of elements in the array: ");
    scanf("%d", &n);

    printf("Enter the elements of the array: ");
    for(int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    min = arr[0];
    for(int i = 1; i < n; i++) {
        if(arr[i] < min) {
            min = arr[i];
        }
    }

    printf("The smallest element in the array is: %d\n", min);

    return 0;
}
•	Write and execute a C Program to sort an array.
#include <stdio.h>

void bubbleSort(int arr[], int n) {
    int i, j, temp;

    for (i = 0; i < n - 1; i++) {
        for (j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

void printArray(int arr[], int n) {
    int i;
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() {
    int arr[] = {64, 34, 25, 12, 22, 11, 90};
    int n = sizeof(arr) / sizeof(arr[0]);

    printf("Original array: ");
    printArray(arr, n);

    bubbleSort(arr, n);

    printf("Sorted array: ");
    printArray(arr, n);

    return 0;
}
